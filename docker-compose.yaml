version: "3"

services:
  vue:
    build:
      context: ./containers
      dockerfile: vue_dockerfile
    container_name: vue_develop
    networks:
      - frontend
      - backend
    volumes:
      - ./frontend:/vue
    ports:
      - 8080:8080
    tty: true

  golang:
    build:
      context: ./containers
      dockerfile: go_ffmpeg_dockerfile
    container_name: go_develop
    networks:
      - backend
    volumes:
      - ./backend:/go/src/server
    ports:
      - 8000:8080
    tty: true
  
  cdn:
    build:
      context: ./containers
      dockerfile: go_ffmpeg_dockerfile
    container_name: cdn
    networks:
      - frontend
    environment:
      - PORT=8080
      - SECRET=secret
    volumes:
      - ./backend/content_subsystem:/go/src/content_subsystem
    ports:
      - 8888:8080
    tty: true
    command: "/go/src/content_subsystem/launch.sh -i -l"

  cache:
    image: redis:latest
    container_name: cache
    networks:
      - backend

  database_test:
    image: postgres:latest
    container_name: relation_db_test_server
    networks:
      - backend
    environment:
      POSTGRES_USER: livewithchat
      POSTGRES_PASSWORD: default
      POSTGRES_DB: mock
    volumes:
      - database-data-test:/var/lib/postgresql/data/

  # pgadmin:
  #   container_name: pgadmin4_container
  #   image: dpage/pgadmin4
  #   restart: always
  #   networks:
  #     - backend
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: root
  #   ports:
  #     - "5050:80"

networks:
  frontend:
    external:
      name: livewithchat_frontend
  backend:
    external:
      name: livewithchat_backend
volumes:
  database-data-test:
