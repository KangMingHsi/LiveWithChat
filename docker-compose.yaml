version: "3"

services:
  vue:
    build:
      context: ./containers
      dockerfile: vue_dockerfile
    container_name: vue_develop
    networks:
      - frontend
      - backend
    volumes:
      - ./frontend:/vue
    ports:
      - 8080:8080
    tty: true

  golang:
    image: golang:latest
    container_name: go_develop
    networks:
      - backend
    volumes:
      - ./backend:/go/src/server
    ports:
      - 8000:8080
    tty: true

  gateway:
    image: golang:latest
    container_name: api_gateway
    networks:
      - frontend
      - backend
    environment:
      - PORT=8080
    volumes:
      - ./backend/api_gateway:/go/src/api_gateway
    # ports:
    #   - 8000:8080
    tty: true
    command: "/go/src/api_gateway/launch.sh"

  auth_subsystem:
    image: golang:latest
    container_name: auth_service
    networks:
      - backend
    environment:
      - PORT=8080
      - SECRET=secret
    volumes:
      - ./backend/auth_subsystem:/go/src/auth_subsystem
    tty: true
    command: "/go/src/auth_subsystem/launch.sh"

  cache:
    image: redis:latest
    container_name: cache
    networks:
      - backend

  database:
    image: postgres:latest
    container_name: relation_db_server
    networks:
      - backend
    environment:
      POSTGRES_USER: livewithchat
      POSTGRES_PASSWORD: default
      POSTGRES_DB: livewithchat
    volumes:
      - database-data:/var/lib/postgresql/data/

  database_test:
    image: postgres:latest
    container_name: relation_db_test_server
    networks:
      - backend
    environment:
      POSTGRES_USER: livewithchat
      POSTGRES_PASSWORD: default
      POSTGRES_DB: mock
    volumes:
      - database-data-test:/var/lib/postgresql/data/

networks:
  frontend:
  backend:
volumes:
  database-data:
  database-data-test:
